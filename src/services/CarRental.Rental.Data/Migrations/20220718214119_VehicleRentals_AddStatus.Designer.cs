// <auto-generated />
using System;
using CarRental.Rental.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRental.Rental.Data.Migrations
{
    [DbContext(typeof(RentalContext))]
    [Migration("20220718214119_VehicleRentals_AddStatus")]
    partial class VehicleRentals_AddStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRental.Rental.Domain.Models.ReturnInspection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deformed")
                        .HasColumnType("bit");

                    b.Property<bool>("Dirty")
                        .HasColumnType("bit");

                    b.Property<bool>("EmptyTank")
                        .HasColumnType("bit");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegistryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Scratched")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RentalId")
                        .IsUnique();

                    b.ToTable("ReturnInspections");
                });

            modelBuilder.Entity("CarRental.Rental.Domain.Models.VehicleRental", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AdditionalValue")
                        .HasColumnType("float");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<double>("HourValue")
                        .HasColumnType("float");

                    b.Property<double>("InitialTotalValue")
                        .HasColumnType("float");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("RegistryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Year")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("VehicleRentals");
                });

            modelBuilder.Entity("CarRental.Rental.Domain.Models.ReturnInspection", b =>
                {
                    b.HasOne("CarRental.Rental.Domain.Models.VehicleRental", "Rental")
                        .WithOne("ReturnInspection")
                        .HasForeignKey("CarRental.Rental.Domain.Models.ReturnInspection", "RentalId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
